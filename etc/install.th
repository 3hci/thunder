#
# Some runtime settings
#
set stage3 http://192.168.10.101/stages/i686/stage3-i686-2008.0_beta2.tar.bz2
set e_root /mnt/gentoo
set c_root /mnt/gentoo/etc/conf.d
#
# detect our disk, don't really care one way or another if the second
# is there or not.
#
#  command      mand  
detect-disks 	prefer 	sd accept hd
#
# auto partition our shit
#
# [command] [primary|extended] <position> <name> <size in MB|'auto'> <partition type>
# 
partition-disk %drive0 primary 1 boot 50 83
partition-disk %drive0 primary 2 swap 32 82
partition-disk %drive0 extended all
partition-disk %drive0 logical 4 root all 83
#
# [command]
#
commit-partitions
#partition-disk %drive1 primary 1 data all 83
#
# Format our partitions
#
# [command] <name(reference above> <fs type> [<optional args to relevant mkfs.*>]
#
#   commandi     	disk  	label	type	 args
format-partition 	%boot 	boot 	ext2	 "-m 0"
format-partition 	%swap 	swap	swap	
format-partition 	%root 	root 	ext3	 "-m 0 -J size=100"
format-partition 	%data 	root 	ext3	 "-m 0 -J size=100"
#
# Mount our partitions
#
# [command] <name> <fstype|auto> <mountpoint> [<optional args to mount>]
#
mount-partition %root auto /mnt/gentoo
mount-partition %boot auto /mnt/gentoo/boot
mount-partition %none proc /mnt/gentoo/proc
mount-partition /sys none /mnt/gentoo/sys "bind"
#
# Activate swap
#
# [command] <swap dev> [<swap dev> <swap dev>]
#
swapon %swap
#
# Fetch our stage tarball, extract our stage tarball
#
# [command] <uri> <destination directory>
#
fetch-and-extract %stage3 %e_root
#
# We have the ability to exec commands on the host, this lets us
# make edits to files inside our installation root
#
# [command] <"command string to be run">
#
exec-command "cat /mnt/gentoo/etc/conf.d/hostname | sed s,localhost,myhostname,g >/tmp/filename"
exec-command "mv /tmp/filename /mnt/gentoo/etc/conf.d/hostname"
exec-command "echo 'config_eth0=\"192.168.10.210 netmask 255.255.255.0\"' > /mnt/gentoo/etc/conf.d/net"
exec-command "echo 'routes_eth0=\"default via 192.168.10.254\"' >> /mnt/gentoo/etc/conf.d/net"
exec-command "echo 'SYNC=\"rsync://srvcs.thwap.org/portage/\"' >> /mnt/gentoo/etc/make.conf"
exec-command "echo 'PORTDIR_OVERLAY=\"/usr/local/portage\"' >>/mnt/gentoo/etc/make.conf"
exec-command "echo 'PORTAGE_BINHOST=\"ftp://srvrs:b1nh05+!@srvcs.thwap.org/All/\"' >>/mnt/gentoo/etc/make.conf"
exec-command "echo 'EMERGE_DEFAULT_OPTS=\"-avbuDg\"' >>/mnt/gentoo/etc/make.conf"
exec-command "echo 'ACCEPT_KEYWORDS=\"~x86\"' >>/mnt/gentoo/etc/make.conf"
exec-command "echo 'FEATURES=\"distcc parallel-fetch\"' >>/mnt/gentoo/etc/make.conf"
exec-command "ln -s /mnt/gentoo/usr/share/zoneinfo/CST6CDT /mnt/gentoo/etc/localtime"
exec-command "echo '"
exec-batch
#
# We have the ability to run commands inside the chroot
# they follow this syntax.
#
# [command] <chroot directory> <"commands to be run (note: make sure they are in double quotes">
#
chroot-command "emerge --sync"
chroot-command "EMERGE_DEFAULT_OPTS=\"-vb1\" emerge portage"
chroot-command "emerge vixie-cron syslog-ng gentoolkit gentoo-sources genkernel grub ntp"
chroot-command "for i in vixie-cron syslog-ng sshd; do rc-update add $i default; done"
chroot-command "for i in net.eth0 ntp-client; do rc-update add $i boot; done"
chroot-command "cd /usr/src/linux && zcat /proc/config.gz > /usr/src/linux/config"
chroot-command "genkernel --kernel-config=config --lvm all"
chroot-command "ln -s /boot/kernel-genkernel* /boot/vmlinuz"
chroot-command "ln -s /boot/initramfs-* /boot/initrd.img"
chroot-command "grub-install %drive0 "
chroot-command "echo root:changeme | chpasswd"
chroot-command "EMERGE_DEFAULT_OPTS=\"-vbuD\" emerge world" 
chroot-batch %e_root
#
# bite it off
#
exec-command "cat /mnt/gentoo/etc/conf.d/hwclock | sed s,#TIMEZONE=\"Factory\",TIMEZONE=\"America/Chicago\",g >/tmp/filename"
exec-command "mv /tmp/filename /mnt/gentoo/etc/conf.d/hwclock"
exec-command "cat /mnt/gentoo/boot/grub/grub.conf | sed -e s,.ernel-g.*-r.,vmlinuz,g -e s,.nitra.*-r.,initrd.img,g >/tmp/filename"
exec-command "mv /tmp/filename /mnt/gentoo/boot/grub/grub.conf"
exec-batch
